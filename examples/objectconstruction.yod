
matter Coffee {
    init(roast: int, name: string, origin: string?, seasonal: boolean?) {
        ye.roast = roast + 2;
        ye.name = name;
        ye.origin = zilch string;
        ye.seasonal = seasonal;
    }

    don brew() -> void {
        proclaim("This coffee is called ${ye.name} and it is a ${ye.roast}.");
    }

    don countryOfOrigin() -> string? {
        return ye?.origin ?? "unknown";
    }

    don isSeasonal() -> boolean? {
        return ye?.seasonal ?? shant;
    }

}

~thine pike: Coffee = Coffee(name: “Pike Place”, roast: “medium-roast”);
~proclaim(pike.brew());
~ Expected output: This coffee is called Pike Place and it is a medium-roast.

~ proclaim(pike.isSeasonal());
~ Expected output: Not specified

~ thine holidayBlend: Coffee = Coffee(name: “Holiday Blend”, roast: “light-roast”, seasonal: true);
~console.log(holidayBlend.isSeasonal());
~ Expected output: true
